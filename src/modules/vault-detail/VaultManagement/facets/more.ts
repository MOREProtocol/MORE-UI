import { availableTokensDropdownOptions, interestRateModeDropdownOptions } from './constants';
import { DisplayType, Facet, InputType } from './types';

export const moreFacet: Facet = {
  contractAddress: {
    mainnet: '0xbC92aaC2DBBF42215248B5688eB3D3d2b32F2c8d',
    testnet: '0x48Dad407aB7299E0175F39F4Cd12c524DB0AB002',
  },
  name: 'MORE',
  icon: '/loveMore.svg',
  description: 'MORE is a decentralized exchange for trading cryptocurrencies.',
  actions: [
    {
      id: 'supply',
      name: 'Supply',
      actionButtonText: 'Supply',
      description: 'Supply a token to a specific pool',
      abi: `function supply(
        address pool,
        address asset,
        uint256 amount,
        address onBehalfOf,
        uint16 referralCode
      ) external;`,
      inputs: [
        {
          id: 'pool',
          name: 'Pool',
          description: 'The pool address',
          type: InputType.ADDRESS,
          isShown: true,
          displayType: DisplayType.ADDRESS_INPUT,
          defaultValue: {
            testnet: '0x48Dad407aB7299E0175F39F4Cd12c524DB0AB002',
            mainnet: '0xbC92aaC2DBBF42215248B5688eB3D3d2b32F2c8d',
          },
        },
        {
          id: 'asset',
          name: 'Asset',
          description: 'The asset to supply',
          type: InputType.ADDRESS,
          isShown: true,
          displayType: DisplayType.DROPDOWN,
          dropdownOptions: availableTokensDropdownOptions,
        },
        {
          id: 'amount',
          name: 'Amount',
          description: 'The amount to supply',
          type: InputType.UINT256,
          isShown: true,
          displayType: DisplayType.CURRENCY_AMOUNT_INPUT,
          relatedInputId: 'asset',
        },
        {
          id: 'onBehalfOf',
          name: 'On Behalf Of',
          description: 'The address to supply the tokens on behalf of',
          type: InputType.ADDRESS,
          isShown: true,
          displayType: DisplayType.ADDRESS_INPUT,
        },
        {
          id: 'referralCode',
          name: 'Referral Code',
          description: 'The referral code to use',
          type: InputType.UINT,
          isShown: true,
        },
      ],
    },
    {
      id: 'withdraw',
      name: 'Withdraw',
      actionButtonText: 'Withdraw',
      description: 'Withdraw a token from a specific pool',
      abi: `function withdraw(
        address pool,
        address asset,
        uint256 amount,
        address to
      ) external returns (uint256 withdrawnAmount);`,
      inputs: [
        {
          id: 'pool',
          name: 'Pool',
          description: 'The pool to withdraw from',
          type: InputType.ADDRESS,
          isShown: true,
          displayType: DisplayType.ADDRESS_INPUT,
          defaultValue: {
            testnet: '0x48Dad407aB7299E0175F39F4Cd12c524DB0AB002',
            mainnet: '0xbC92aaC2DBBF42215248B5688eB3D3d2b32F2c8d',
          },
        },
        {
          id: 'asset',
          name: 'Asset',
          description: 'The asset to withdraw',
          type: InputType.ADDRESS,
          isShown: true,
          displayType: DisplayType.DROPDOWN,
          dropdownOptions: availableTokensDropdownOptions,
        },
        {
          id: 'amount',
          name: 'Amount',
          description: 'The amount to withdraw',
          type: InputType.UINT256,
          isShown: true,
          displayType: DisplayType.CURRENCY_AMOUNT_INPUT,
          relatedInputId: 'asset',
        },
        {
          id: 'to',
          name: 'To',
          description: 'The address to send the withdrawn tokens to',
          type: InputType.ADDRESS,
          isShown: true,
          displayType: DisplayType.ADDRESS_INPUT,
        },
      ],
    },
    {
      id: 'borrow',
      name: 'Borrow',
      actionButtonText: 'Borrow',
      description: 'Borrow a token from a specific pool',
      abi: `function borrow(
        address pool,
        address asset,
        uint256 amount,
        uint256 interestRateMode,
        uint16 referralCode,
        address onBehalfOf
      ) external;`,
      inputs: [
        {
          id: 'pool',
          name: 'Pool',
          description: 'The pool to borrow from',
          type: InputType.ADDRESS,
          isShown: true,
          displayType: DisplayType.ADDRESS_INPUT,
          defaultValue: {
            testnet: '0x48Dad407aB7299E0175F39F4Cd12c524DB0AB002',
            mainnet: '0xbC92aaC2DBBF42215248B5688eB3D3d2b32F2c8d',
          },
        },
        {
          id: 'asset',
          name: 'Asset',
          description: 'The asset to borrow',
          type: InputType.ADDRESS,
          isShown: true,
          displayType: DisplayType.DROPDOWN,
          dropdownOptions: availableTokensDropdownOptions,
        },
        {
          id: 'amount',
          name: 'Amount',
          description: 'The amount to borrow',
          type: InputType.UINT256,
          isShown: true,
          displayType: DisplayType.CURRENCY_AMOUNT_INPUT,
          relatedInputId: 'asset',
        },
        {
          id: 'interestRateMode',
          name: 'Interest Rate Mode',
          description: 'The interest rate mode to use',
          type: InputType.UINT256,
          isShown: true,
          displayType: DisplayType.DROPDOWN,
          defaultValue: '2',
          dropdownOptions: interestRateModeDropdownOptions,
        },
        {
          id: 'referralCode',
          name: 'Referral Code',
          description: 'The referral code to use',
          type: InputType.UINT16,
          isShown: true,
          displayType: DisplayType.DROPDOWN,
          defaultValue: '0',
          dropdownOptions: [{ label: '0', value: '0' }],
        },
        {
          id: 'onBehalfOf',
          name: 'On Behalf Of',
          description: 'The address to borrow the tokens on behalf of',
          type: InputType.ADDRESS,
          isShown: true,
          displayType: DisplayType.ADDRESS_INPUT,
        },
      ],
    },
    {
      id: 'repay',
      name: 'Repay',
      actionButtonText: 'Repay',
      description: 'Repay a token from a specific pool',
      abi: `function repay(
        address pool,
        address asset,
        uint256 amount,
        uint256 interestRateMode,
        address onBehalfOf
      ) external returns (uint256 repaidAmount);`,
      inputs: [
        {
          id: 'pool',
          name: 'Pool',
          description: 'The pool to repay to',
          type: InputType.ADDRESS,
          isShown: true,
          displayType: DisplayType.ADDRESS_INPUT,
          defaultValue: {
            testnet: '0x48Dad407aB7299E0175F39F4Cd12c524DB0AB002',
            mainnet: '0xbC92aaC2DBBF42215248B5688eB3D3d2b32F2c8d',
          },
        },
        {
          id: 'asset',
          name: 'Asset',
          description: 'The asset to repay',
          type: InputType.ADDRESS,
          isShown: true,
          displayType: DisplayType.DROPDOWN,
          dropdownOptions: availableTokensDropdownOptions,
        },
        {
          id: 'amount',
          name: 'Amount',
          description: 'The amount to repay',
          type: InputType.UINT256,
          isShown: true,
          displayType: DisplayType.CURRENCY_AMOUNT_INPUT,
          relatedInputId: 'asset',
        },
        {
          id: 'interestRateMode',
          name: 'Interest Rate Mode',
          description: 'The interest rate mode to use',
          type: InputType.UINT256,
          isShown: true,
          displayType: DisplayType.DROPDOWN,
          defaultValue: '2',
          dropdownOptions: interestRateModeDropdownOptions,
        },
        {
          id: 'onBehalfOf',
          name: 'On Behalf Of',
          description: 'The address to repay the tokens on behalf of',
          type: InputType.ADDRESS,
          isShown: true,
          displayType: DisplayType.ADDRESS_INPUT,
        },
      ],
    },
    {
      id: 'flashLoanSimple',
      name: 'Flash Loan Simple',
      actionButtonText: 'Flash Loan',
      description: 'Flash loan a token from a specific pool',
      abi: `function flashLoanSimple(
        address pool,
        address receiverAddress,
        address asset,
        uint256 amount,
        bytes calldata params,
        uint16 referralCode
      ) external;`,
      inputs: [
        {
          id: 'pool',
          name: 'Pool',
          description: 'The pool to flash loan from',
          type: InputType.ADDRESS,
          isShown: true,
          displayType: DisplayType.ADDRESS_INPUT,
          defaultValue: {
            testnet: '0x48Dad407aB7299E0175F39F4Cd12c524DB0AB002',
            mainnet: '0xbC92aaC2DBBF42215248B5688eB3D3d2b32F2c8d',
          },
        },
        {
          id: 'receiverAddress',
          name: 'Receiver Address',
          description: 'The address to receive the flash loan',
          type: InputType.ADDRESS,
          isShown: true,
          displayType: DisplayType.ADDRESS_INPUT,
        },
        {
          id: 'asset',
          name: 'Asset',
          description: 'The asset to flash loan',
          type: InputType.ADDRESS,
          isShown: true,
          displayType: DisplayType.DROPDOWN,
          dropdownOptions: availableTokensDropdownOptions,
        },
        {
          id: 'amount',
          name: 'Amount',
          description: 'The amount to flash loan',
          type: InputType.UINT256,
          isShown: true,
          displayType: DisplayType.CURRENCY_AMOUNT_INPUT,
          relatedInputId: 'asset',
        },
        {
          id: 'params',
          name: 'Params',
          description: 'The params to pass to the flash loan',
          type: InputType.BYTES,
          isShown: true,
          displayType: DisplayType.BYTES_INPUT,
        },
        {
          id: 'referralCode',
          name: 'Referral Code',
          description: 'The referral code to use',
          type: InputType.UINT16,
          isShown: true,
          displayType: DisplayType.DROPDOWN,
          defaultValue: '0',
          dropdownOptions: [{ label: '0', value: '0' }],
        },
      ],
    },
  ],
};
